{"version":3,"sources":["components/PeopleForm.js","components/Person.js","components/People.js","services/people.js","components/SearchBox.js","components/Notification.js","App.js","index.js"],"names":["PeopleForm","props","person","peopleToShow","find","name","newName","onSubmit","id","isUpdated","updatePerson","addPerson","className","value","onChange","handlePersonChange","newNumber","handleNumberChange","type","Person","number","People","map","i","key","onClick","deletePerson","baseUrl","axios","get","then","response","data","newObject","post","put","delete","SearchBox","filteredPeople","handlePersonSearch","Notification","notification","message","App","useState","people","setPeople","setNewName","setNewNumber","showAll","setShowAll","searchPerson","setSearchPerson","setFilteredPeople","setUpdated","setNotification","useEffect","personService","notifyWith","setTimeout","p","changedPerson","returnedPerson","catch","err","handleSetUpdated","event","target","filter","toLowerCase","includes","preventDefault","personObject","window","confirm","concat","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5367b1e8.chunk.js","sourcesContent":["import React from 'react';\n\nconst PeopleForm = (props) => {\n  const person = props.peopleToShow.find(person => person.name === props.newName)\n  const getPersonId = () => {\n    if (props.newName && person) {\n      return person.id\n    }\n  }\n  \n  return (\n    <form onSubmit=\n      {(getPersonId && props.isUpdated)\n      ? props.updatePerson\n      : props.addPerson\n      }\n    >\n      <div>\n        <span>name: </span> \n        <input \n          className=\"name\"\n          value={props.newName} \n          onChange={props.handlePersonChange}\n        />\n      </div>\n      <div>\n        <span>number: </span>\n        <input \n          className=\"number\"\n          value={props.newNumber} \n          onChange={props.handleNumberChange}\n        />  \n      </div>\n      <button className=\"button\" type=\"submit\">ADD</button>\n    </form>\n  )\n}\n\nexport default PeopleForm","import React from 'react';\n\nconst Person = ({ person }) => {\n  return (\n    <div className=\"person\">\n      {person.name} {person.number}\n    </div>\n  )\n}\n\nexport default Person\n","import React from 'react';\nimport Person from './Person';\n\nconst People = (props) => {\n  return (\n    <div>\n      {props.peopleToShow.map((person, i) => \n        <div key={i}>\n          <Person \n            person={person} \n          />\n          <button className=\"button\" onClick={() => props.deletePerson(person.id)}>DELETE</button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default People","import axios from 'axios';\nconst baseUrl = '/api/people'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, del }","import React from 'react';\n\nconst SearchBox = (props) => {\n  return (\n    <div>\n      <span>filter shown with </span>\n      <input value={props.filteredPeople} onChange={props.handlePersonSearch}/>\n    </div>\n  )\n}\n\nexport default SearchBox","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PeopleForm from './components/PeopleForm';\nimport People from './components/People'\nimport personService from './services/people';\nimport SearchBox from './components/SearchBox';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [people, setPeople] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [searchPerson, setSearchPerson]  = useState('')\n  const [filteredPeople, setFilteredPeople] = useState([])\n  const [isUpdated, setUpdated] = useState(false)\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(data => {\n        setPeople(data)\n      })\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const peopleToShow = showAll\n  ? people\n  : filteredPeople\n\n  const handlePersonSearch = (event) => {\n    let searchPerson = event.target.value\n    let filteredPeople = people.filter(person => {\n      return person.name.toLowerCase().includes(searchPerson.toLowerCase())\n    })\n    setSearchPerson(searchPerson)\n    if (searchPerson === '') {\n      setShowAll(peopleToShow)\n    } else {\n      setFilteredPeople(filteredPeople)\n      setShowAll(!showAll)\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const namesOfPeopleInPhonebook = people.map((person) => {\n      return person.name\n    })\n    namesOfPeopleInPhonebook.includes(newName) // && !people.includes(newNumber)\n    ?\n    (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n    && handleSetUpdated()\n    )\n    //alert(`${newName} is already added to the phonebook`)\n    :\n    personService\n    .create(personObject)\n    .then(returnedPerson => {\n      setPeople(people.concat(returnedPerson))\n      setNewName('')\n      setNewNumber('')\n      notifyWith(`Added ${newName}`)\n    })\n    .catch(err => {\n      notifyWith(`${err.response.data.err} `, 'error')\n    })\n  }\n\n  // TODO: after update one shouldn't need to refresh the page to get other people's contact info back\n  const updatePerson = (id, newNumber) => {\n    const person = peopleToShow.find(p => p.id === id)\n    const changedPerson = { ...person, number: newNumber }\n    personService\n    .update(id, changedPerson)\n    .then(returnedPerson => {\n      setPeople(people.map(person => person.id === id && returnedPerson))\n      notifyWith(\n        `Number was updated`\n      )\n    })\n    .catch(err => {\n      notifyWith(`${err.response.data.err} `, 'error')\n    })\n  }\n\n  const deletePerson = (id) => {\n    const toDelete = people.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${toDelete.name}`)\n    if (ok) {\n      personService\n      .del(id)\n      .then(() => {\n        setPeople(people.filter(p => p.id !== id))\n        notifyWith(`Deleted ${toDelete.name}`)\n      })\n      .catch(() => {\n        setPeople(people.filter(p => p.id !== id))         \n        notifyWith(`${toDelete.name} had already been removed`, 'error')\n      })\n    }\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSetUpdated = () => {\n    const person = peopleToShow.find(person => person.name === newName)\n    const id = person.id\n  \n    setUpdated(true)\n    updatePerson(id, newNumber)\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <SearchBox \n        searchPerson={searchPerson}\n        handlePersonSearch={handlePersonSearch}\n      />\n      <h2>add a new</h2>\n      <PeopleForm \n        addPerson={addPerson}\n        updatePerson={updatePerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        handlePersonChange={handlePersonChange}\n        peopleToShow={peopleToShow}\n        isUpdated={isUpdated}\n      />\n      <h2>Numbers</h2>\n      <People \n        peopleToShow={peopleToShow}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}